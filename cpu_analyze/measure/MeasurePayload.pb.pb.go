// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MeasurePayload.pb

/*
Package measure is a generated protocol buffer package.

It is generated from these files:
	MeasurePayload.pb

It has these top-level messages:
	Tag
	IntField
	FloatField
	MeasurePayload
*/
package measure

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tag struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type IntField struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *IntField) Reset()                    { *m = IntField{} }
func (m *IntField) String() string            { return proto.CompactTextString(m) }
func (*IntField) ProtoMessage()               {}
func (*IntField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IntField) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *IntField) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type FloatField struct {
	Key   string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value float32 `protobuf:"fixed32,2,opt,name=value" json:"value,omitempty"`
}

func (m *FloatField) Reset()                    { *m = FloatField{} }
func (m *FloatField) String() string            { return proto.CompactTextString(m) }
func (*FloatField) ProtoMessage()               {}
func (*FloatField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FloatField) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FloatField) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type MeasurePayload struct {
	Tags        []*Tag        `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	IntFields   []*IntField   `protobuf:"bytes,2,rep,name=intFields" json:"intFields,omitempty"`
	FloatFields []*FloatField `protobuf:"bytes,3,rep,name=floatFields" json:"floatFields,omitempty"`
}

func (m *MeasurePayload) Reset()                    { *m = MeasurePayload{} }
func (m *MeasurePayload) String() string            { return proto.CompactTextString(m) }
func (*MeasurePayload) ProtoMessage()               {}
func (*MeasurePayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MeasurePayload) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MeasurePayload) GetIntFields() []*IntField {
	if m != nil {
		return m.IntFields
	}
	return nil
}

func (m *MeasurePayload) GetFloatFields() []*FloatField {
	if m != nil {
		return m.FloatFields
	}
	return nil
}

func init() {
	proto.RegisterType((*Tag)(nil), "measure.Tag")
	proto.RegisterType((*IntField)(nil), "measure.IntField")
	proto.RegisterType((*FloatField)(nil), "measure.FloatField")
	proto.RegisterType((*MeasurePayload)(nil), "measure.MeasurePayload")
}

func init() { proto.RegisterFile("MeasurePayload.pb", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf4, 0x4d, 0x4d, 0x2c,
	0x2e, 0x2d, 0x4a, 0x0d, 0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0xd1, 0x2b, 0x48, 0x12, 0x62, 0xcf,
	0x85, 0x08, 0x29, 0xe9, 0x72, 0x31, 0x87, 0x24, 0xa6, 0x0b, 0x09, 0x70, 0x31, 0x67, 0xa7, 0x56,
	0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39,
	0xa5, 0xa9, 0x12, 0x4c, 0x60, 0x31, 0x08, 0x47, 0xc9, 0x88, 0x8b, 0xc3, 0x33, 0xaf, 0xc4, 0x2d,
	0x33, 0x35, 0x27, 0x85, 0x90, 0x1e, 0x56, 0x98, 0x1e, 0x13, 0x2e, 0x2e, 0xb7, 0x9c, 0xfc, 0x44,
	0xe2, 0x74, 0x31, 0xc1, 0x74, 0xcd, 0x62, 0xe4, 0xe2, 0x43, 0x75, 0xb7, 0x90, 0x02, 0x17, 0x4b,
	0x49, 0x62, 0x7a, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x11, 0x8f, 0x1e, 0xd4, 0x0f, 0x7a,
	0x21, 0x89, 0xe9, 0x41, 0x60, 0x19, 0x21, 0x7d, 0x2e, 0xce, 0x4c, 0xa8, 0xf3, 0x8a, 0x25, 0x98,
	0xc0, 0xca, 0x04, 0xe1, 0xca, 0x60, 0x0e, 0x0f, 0x42, 0xa8, 0x11, 0x32, 0xe5, 0xe2, 0x4e, 0x83,
	0xbb, 0xad, 0x58, 0x82, 0x19, 0xac, 0x45, 0x18, 0xae, 0x05, 0xe1, 0xee, 0x20, 0x64, 0x75, 0x49,
	0x6c, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x71, 0xf2,
	0xa7, 0x5a, 0x01, 0x00, 0x00,
}
